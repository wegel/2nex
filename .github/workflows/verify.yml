name: Verify
on: [push, pull_request]
jobs:
  verify:
    runs-on: ${{ format('shghr/{0}/{1}/{2}/{3}/{4}/{5}', github.repository, github.ref, github.sha, github.run_id, github.run_number, github.run_attempt) }}
    container:
      image: fedora:39
      options: -t
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add deps
        run: |
          dnf install -y automake bash binutils bison coreutils diffutils file findutils gawk gcc gettext gcc-c++ grep gzip hostname kernel-headers \
                         m4 make openssl-devel ostree ostree-devel patch perl python3 sed tar texinfo shadow-utils util-linux xz

      - run: hostname

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build project
        run: cargo build --manifest-path src/builder/Cargo.toml

      - name: Initialize OSTree repository
        run: ostree --repo=bootstrap_store init --mode=bare-user

      - name: Verify Project Status
        run: |
          mkdir -p /my-build && cp -a * /my-build/ && cd /my-build
          for PHASE in 0 1 2 3; do
            echo "Phase: $PHASE"
            for M in $(ls manifests/bootstrap/phase${PHASE}/*.yaml | sort -V); do
              echo "Building: ${M}"
              B=""
              [ $PHASE -lt 2 ] && B="--bootstrap"
              if ! src/builder/target/debug/nex $B bootstrap_store $M > /tmp/build_log 2>&1; then
                cat /tmp/build_log
                echo "Failed ${M}"
                break
              fi
              rm -rf build_rootfs
            done
          done
